{"version":3,"sources":["colors.js","Gradient.js","Nav.js","App.js","index.js"],"names":["min","arr","Math","apply","max","randomColor","mixColor","color","floor","random","genColors","initColor","colors","Gradient","props","id","viewBox","gradientTransform","attributeName","attributeType","type","from","to","dur","repeatCount","offset","stopColor","join","values","x","y","width","height","fill","Nav","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gJAAMA,G,UAAM,SAACC,GACX,OAAOC,KAAKF,IAAIG,MAAMD,KAAMD,KAGxBG,EAAM,SAACH,GACX,OAAOC,KAAKE,IAAID,MAAMD,KAAMD,IAGxBI,EAAc,SAACC,GACnB,IAEIC,EAAQ,CACVL,KAAKM,MAHG,IAGGN,KAAKO,UAFL,EAGXP,KAAKM,MAJG,IAIGN,KAAKO,UAHL,EAIXP,KAAKM,MALG,IAKGN,KAAKO,UAJL,GAWb,OALIH,IACFC,EAAM,GAAKA,EAAM,GAAKD,EAAS,GAAK,EACpCC,EAAM,GAAKA,EAAM,GAAKD,EAAS,GAAK,EACpCC,EAAM,GAAKA,EAAM,GAAKD,EAAS,GAAK,GAE/BC,GA2BMG,EAxBG,WAChB,IAAIC,EAAYN,IAEZO,EAAS,CACXP,EAAYM,GACZN,EAAYM,GACZN,EAAYM,IAed,OAZAC,EAAO,GAAK,CACVZ,EAAI,CAACY,EAAO,GAAG,GAAIA,EAAO,GAAG,GAAIA,EAAO,GAAG,KAC3CZ,EAAI,CAACY,EAAO,GAAG,GAAIA,EAAO,GAAG,GAAIA,EAAO,GAAG,KAC3CZ,EAAI,CAACY,EAAO,GAAG,GAAIA,EAAO,GAAG,GAAIA,EAAO,GAAG,MAG7CA,EAAO,GAAK,CACVR,EAAI,CAACQ,EAAO,GAAG,GAAIA,EAAO,GAAG,GAAIA,EAAO,GAAG,KAC3CR,EAAI,CAACQ,EAAO,GAAG,GAAIA,EAAO,GAAG,GAAIA,EAAO,GAAG,KAC3CR,EAAI,CAACQ,EAAO,GAAG,GAAIA,EAAO,GAAG,GAAIA,EAAO,GAAG,MAGtCA,G,OCVMC,MAnCf,SAAkBC,GAChB,OACE,sBAAKC,GAAG,aAAaC,QAAQ,cAA7B,UACE,+BACE,iCAAgBD,GAAG,WAAWE,kBAAkB,oBAAhD,UACE,kCAAkBC,cAAc,oBACdH,GAAG,OACHI,cAAc,MACdC,KAAK,SACLC,KAAK,YACLC,GAAG,YACHC,IAAI,MACJC,YAAY,eAC9B,sBAAMT,GAAG,QACHU,OAAO,IACPC,UAAS,gBAAWZ,EAAMF,OAAO,GAAGe,KAAK,KAAhC,YACf,sBAAMZ,GAAG,QACHU,OAAO,KACPC,UAAS,eAAUZ,EAAMF,OAAO,GAAGe,KAAK,KAA/B,UAFf,SAGE,yBAAST,cAAc,SACnBH,GAAG,SACHQ,IAAI,MACJK,OAAO,mBACPJ,YAAY,iBAElB,sBAAMT,GAAG,QACHU,OAAO,IACPC,UAAS,eAAUZ,EAAMF,OAAO,GAAGe,KAAK,KAA/B,iBAGnB,sBAAME,EAAE,IAAIC,EAAE,IAAIC,MAAM,OAAOC,OAAO,OAAOC,KAAK,uBCvBzCC,MAPf,SAAapB,GACX,OACE,yBCgBWqB,MAbf,WAEE,IAAIvB,EAASF,IAEb,OACE,sBAAK0B,UAAU,MAAf,UACE,cAAC,EAAD,CAAUxB,OAAQA,IAClB,cAAC,EAAD,CAAKA,OAAQA,IACb,wBAAQwB,UAAU,aAAlB,+BCRNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.e7219bc2.chunk.js","sourcesContent":["const min = (arr) => {\n  return Math.min.apply(Math, arr)\n}\n\nconst max = (arr) => {\n  return Math.max.apply(Math, arr)\n}\n\nconst randomColor = (mixColor) => {\n  let max = 155;\n  let offset = 6;\n  let color = [\n    Math.floor(Math.random() * max) + offset,\n    Math.floor(Math.random() * max) + offset,\n    Math.floor(Math.random() * max) + offset,\n  ]\n  if (mixColor) {\n    color[0] = color[0] + mixColor[0] / 2;\n    color[1] = color[1] + mixColor[1] / 2;\n    color[2] = color[2] + mixColor[2] / 2;\n  } \n  return color\n}\n\nconst genColors = () => {\n  let initColor = randomColor()\n\n  let colors = [\n    randomColor(initColor),\n    randomColor(initColor),\n    randomColor(initColor),\n  ];\n\n  colors[3] = [\n    min([colors[0][0], colors[1][0], colors[2][0]]),\n    min([colors[0][1], colors[1][1], colors[2][1]]),\n    min([colors[0][2], colors[1][2], colors[2][2]]),\n  ];\n\n  colors[4] = [\n    max([colors[0][0], colors[1][0], colors[2][0]]),\n    max([colors[0][1], colors[1][1], colors[2][1]]),\n    max([colors[0][2], colors[1][2], colors[2][2]]),\n  ];\n\n  return colors\n}\n\nexport default genColors;\n\n","function Gradient(props) {\n  return (\n    <svg id=\"background\" viewBox=\"0 0 200 200\">\n      <defs>\n        <linearGradient id=\"gradient\" gradientTransform=\"rotate(100 .5 .5)\">\n          <animateTransform attributeName=\"gradientTransform\" \n                            id=\"spin\"\n                            attributeType=\"XML\"\n                            type=\"rotate\"\n                            from=\"100 .5 .5\"\n                            to=\"460 .5 .5\"\n                            dur=\"35s\"\n                            repeatCount=\"indefinite\" />\n          <stop id=\"stop1\" \n                offset=\"0\" \n                stopColor={`rgba( ${props.colors[0].join(',')}, 0.4)`}/>\n          <stop id=\"stop2\" \n                offset=\".3\" \n                stopColor={`rgba(${props.colors[1].join(',')}, 0.4)`}>\n            <animate attributeName=\"offset\" \n                id=\"breath\" \n                dur=\"40s\" \n                values=\"0.40; 0.50; 0.40\" \n                repeatCount=\"indefinite\"></animate>\n          </stop>\n          <stop id=\"stop3\" \n                offset=\"1\" \n                stopColor={`rgba(${props.colors[2].join(',')}, 0.4)`}/>     \n        </linearGradient> \n      </defs>\n      <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"url(#gradient)\"/>\n    </svg>\n  );\n}\n\nexport default Gradient;\n","function Nav(props) {\n  return (\n    <nav>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import './App.css';\nimport genColors from './colors.js';\nimport Gradient from './Gradient.js';\nimport Nav from './Nav.js';\n\nfunction App() {\n\n  let colors = genColors();\n\n  return (\n    <div className=\"App\">\n      <Gradient colors={colors} />\n      <Nav colors={colors} />\n      <header className=\"App-header\">HEYA HIYA HEY</header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}